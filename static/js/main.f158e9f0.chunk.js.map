{"version":3,"sources":["components/QuestionCard.styles.js","components/QuestionCard.jsx","components/Alert.styles.js","components/Alert.jsx","components/FinalScore.styles.js","App.styles.js","components/FinalScore.jsx","App.js","index.js"],"names":["Wrapper","styled","div","WrappedButtons","QuestionButton","button","Question","QuestionCounter","QuestionCard","question","totalQuestions","currentQuestion","handleResponse","score","answers","disabled","map","answer","index","key","value","onClick","fadeIn","keyframes","Result","props","result","css","Alert","StyledFinalScore","StyledApp","MainButton","margin","StyledTite","h1","FinalScore","handleTryAgain","className","App","useState","questions","setQuestions","loading","setLoading","number","setNumber","setAnswers","correctAnswers","setCorrectAnswers","setDisabled","setScore","setResult","showQuestions","setShowQuestions","showFinalScore","setShowFinalScore","showAlert","setShowAlert","e","axios","get","then","data","results","correct_answer","dataArr","incorrect_answers","concat","sort","Math","random","length","userAnswer","currentTarget","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f158e9f0.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\n\r\n\r\nexport const Wrapper = styled.div`\r\nmax-width: 1100px;\r\nheight: 500px;\r\ndisplay: flex;\r\nalign-items: center;\r\nflex-direction: column;\r\nbackground-color:rgba(255,255,255, 0.5);\r\npadding: 20px 15px;\r\nborder: 2px solid rgb(64,199,129)\r\n`\r\n\r\n\r\nexport const WrappedButtons = styled.div`\r\ndisplay:flex;\r\nflex-direction: column;\r\nwidth: 100%;\r\n`\r\n\r\nexport const QuestionButton = styled.button`\r\nborder: 0;\r\nbackground-color: rgba(0,0,0, 0.7);\r\ncolor: white;\r\nmargin-bottom: 20px;\r\npadding: 15px;\r\ncursor: pointer;\r\n`\r\n\r\nexport const Question = styled.div`\r\n    font-size: 32px;\r\n    text-align:center;\r\n    margin-bottom: 20px;\r\n`\r\n\r\nexport const QuestionCounter = styled.div`\r\nfont-size: 21px;\r\ntex-align: center;\r\nmargin-bottom: 50px;\r\n`","import React from 'react'\r\nimport { Wrapper, WrappedButtons, QuestionButton, Question, QuestionCounter, } from './QuestionCard.styles';\r\n\r\n\r\nconst QuestionCard = ({ question, totalQuestions, currentQuestion, handleResponse, score, answers, disabled }) => {\r\n    return (\r\n        <Wrapper>\r\n            <h1> SCORE: {score}</h1>\r\n            <Question>{question}</Question>\r\n            <QuestionCounter>{currentQuestion} / {totalQuestions}</QuestionCounter>\r\n            <WrappedButtons>\r\n                {answers && answers.map((answer, index) => (\r\n                    <QuestionButton key={index + answer} disabled={disabled ? disabled : null} value={answers[index]} onClick={handleResponse}>\r\n                        <span> {answer}</span>\r\n                    </QuestionButton>\r\n                ))}\r\n            </WrappedButtons>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default QuestionCard\r\n","import styled, { keyframes, css } from 'styled-components';\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    opacity: 1;}\r\n`\r\n\r\n\r\nexport const Result = styled.div`\r\nmax-width: 250px;\r\npadding: 20px;\r\ncolor: #fff;\r\nbackground-color:rgba(0, 255, 0, 0.5);\r\nposition: absolute;\r\ntop: 0;\r\nright: 0;\r\nfont-size: 32px;\r\ntransition: 1s all ease;\r\nanimation: .5s ${fadeIn} ease-out;\r\n${props =>\r\n        props.result === false &&\r\n        css`\r\n        background-color:rgba(255, 0,0, 0.5);\r\n    `}\r\n`\r\n","import React from 'react';\r\nimport { Result } from './Alert.styles'\r\n\r\nconst Alert = ({ result }) => {\r\n    return (\r\n        <div>\r\n            <Result result={result}>\r\n                {result ? \"Верно\" : \"Неверно\"}\r\n            </Result>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const StyledFinalScore = styled.div`\r\nmargin-top: 20px;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nflex-direction: column;\r\nwidth: 600px;\r\nheight: 300px;\r\ncolor: #fff;\r\nbackground-color: rgba(0,0,0, 0.5);\r\nborder: 1px solid rgba(0, 255, 0, 0.5);\r\nfont-size: 32px;\r\ntransition: 1s all ease;\r\n`\r\n","import styled, { css } from 'styled-components';\r\n\r\n\r\n\r\nexport const StyledApp = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    background: url('https://images.unsplash.com/photo-1593642532744-d377ab507dc8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80') center center/cover no-repeat;\r\n    height: 100vh;\r\n    `\r\n\r\nexport const MainButton = styled.button`\r\n    cursor: pointer;\r\n    padding: 5px 20px;\r\n    font-weight: 700;\r\n    color: white;\r\n    text-decoration: none;\r\n    padding: .8em 1em calc(.8em + 3px);\r\n    border-radius: 3px;\r\n    background: rgb(64,199,129);\r\n    box-shadow: 0 -3px rgb(53,167,110) inset;\r\n    transition: 0.2s;\r\n    border: none;\r\n    padding: 15px 0px;\r\n    width: 150px;\r\n    ${props =>\r\n        props.margin &&\r\n        css`\r\n        margin: 10px 0px;\r\n        `};\r\n\r\n`\r\n\r\n\r\nexport const StyledTite = styled.h1`\r\n    text-align: center;\r\n    margin: 0;\r\n    color:#fff;\r\n    font-size: 60px;\r\n`","import React from 'react';\r\nimport { StyledFinalScore } from './FinalScore.styles';\r\nimport { StyledTite, MainButton } from '../App.styles.js';\r\n\r\nconst FinalScore = ({ score, handleTryAgain }) => {\r\n    return (\r\n        <StyledFinalScore className='final-score'>\r\n            <StyledTite>{`Вы ответили правильно на: ${score} вопросов`}</StyledTite>\r\n            <MainButton onClick={handleTryAgain} margin>попробовать снова</MainButton>\r\n        </StyledFinalScore>\r\n    )\r\n}\r\n\r\nexport default FinalScore\r\n","import React, { useState } from 'react';\n//Components\nimport QuestionCard from './components/QuestionCard';\nimport Alert from './components/Alert';\nimport FinalScore from './components/FinalScore';\n//Components\nimport './App.css';\nimport { MainButton, StyledTite, StyledApp } from './App.styles'\nimport axios from 'axios';\n\nconst TOTAL_QUESTIONS = 10;\n\nfunction App() {\n\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [number, setNumber] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [correctAnswers, setCorrectAnswers] = useState('');\n  const [disabled, setDisabled] = useState(false);\n  const [score, setScore] = useState(0);\n  const [result, setResult] = useState(null);\n  const [showQuestions, setShowQuestions] = useState(false);\n  const [showFinalScore, setShowFinalScore] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n\n\n\n\n  const handleStart = (e) => {\n    setLoading(true)\n    axios.get(`https://opentdb.com/api.php?amount=${TOTAL_QUESTIONS}`).then(({ data }) => {\n      setQuestions(data.results.map(result => result.question));\n      setLoading(false);\n      setShowQuestions(true);\n      setCorrectAnswers(data.results.map(result => result.correct_answer));\n      const dataArr = data.results.map(result => result.incorrect_answers.concat(result.correct_answer)) // соединяем неправильные ответы и один правильный в массив\n      setAnswers(dataArr.map(answers => answers.sort(() => Math.random() - 0.5))); // рандомно сортируем каждый массив ответов\n\n    });\n\n  }\n\n  const handleNext = (e) => {\n    if (number + 1 !== TOTAL_QUESTIONS) {\n      setNumber(number + 1)\n      setDisabled(false)\n      setShowAlert(false)\n    }\n    else {\n      setShowFinalScore(true);\n      setShowQuestions(false);\n    }\n\n  }\n\n  const handleResponse = (e) => {\n    const userAnswer = e.currentTarget.value;\n    if (correctAnswers[number] === userAnswer) {\n      setScore(score + 1);\n      setDisabled(true);\n      setShowAlert(true);\n      setResult(true);\n      // убрать лишний рендер при клике на ответ, который заново сортирует ответы (✓)\n      // пофиксить кодировку\n    }\n    else {\n      setResult(false);\n      setDisabled(true);\n      setShowAlert(true);\n    }\n  }\n  const handleTryAgain = () => {\n    setNumber(0);\n    setScore(0);\n    setShowFinalScore(false);\n  };\n\n\n\n  return (\n    <StyledApp>\n      {showAlert && <Alert result={result} />}\n      <StyledTite>React-quiz</StyledTite>\n      {showFinalScore ? <FinalScore handleTryAgain={handleTryAgain} score={score} /> : null}\n      {!showQuestions && !showFinalScore ? <MainButton margin onClick={handleStart}>start</MainButton> : null}\n      <div>\n        {loading && <p>Loading Questions...</p>}\n        {showQuestions ? <QuestionCard disabled={disabled} answers={answers.length !== 0 ? answers[number] : null} score={score} handleResponse={handleResponse} question={questions[number]} totalQuestions={TOTAL_QUESTIONS} currentQuestion={number + 1} /> : null}\n\n      </div>\n      {showQuestions && <MainButton margin onClick={handleNext}>Next question</MainButton>}\n\n\n    </StyledApp>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}